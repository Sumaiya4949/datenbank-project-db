/* Create tables of all entities */

CREATE TABLE ADMIN (
    ID UUID PRIMARY KEY,
    USERNAME VARCHAR(20) NOT NULL,
    PASSWORD VARCHAR(300) NOT NULL,
    FORENAME VARCHAR(30) NOT NULL,
    SURNAME VARCHAR(30) NOT NULL
);

CREATE TABLE TEACHER (
    ID UUID PRIMARY KEY,
    USERNAME VARCHAR(20) NOT NULL,
    PASSWORD VARCHAR(300) NOT NULL,
    FORENAME VARCHAR(30) NOT NULL,
    SURNAME VARCHAR(30) NOT NULL
);

CREATE TABLE PUPIL (
    ID UUID PRIMARY KEY,
    USERNAME VARCHAR(20) NOT NULL,
    PASSWORD VARCHAR(300) NOT NULL,
    FORENAME VARCHAR(30) NOT NULL,
    SURNAME VARCHAR(30) NOT NULL
);

CREATE TABLE SUBJECT (
    ID UUID PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL
);

CREATE TABLE ARCHIVED_SUBJECT (
    ID UUID PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    IS_DUPLICATE BOOLEAN
);

CREATE TABLE TEST (
    ID UUID PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    DATE TIMESTAMP NOT NULL
);

CREATE TABLE CLASS (
    NAME VARCHAR(30) PRIMARY KEY
);

/* Create tables of all relationships */

CREATE TABLE TEACHES (
    TEACHER_ID UUID,
    SUBJECT_ID UUID,

    CONSTRAINT FK_TEACHER_ID FOREIGN KEY (TEACHER_ID) REFERENCES TEACHER(ID),
    CONSTRAINT FK_SUBJECT_ID FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECT(ID)
);

CREATE TABLE HAS_TEST (
    SUBJECT_ID UUID,
    TEST_ID UUID,

    -- CONSTRAINT FK_SUBJECT_ID FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECT(ID),
    CONSTRAINT FK_TEST_ID FOREIGN KEY (TEST_ID) REFERENCES TEST(ID)
);

CREATE TABLE OFFERS (
    CLASS_NAME VARCHAR(30) NOT NULL,
    SUBJECT_ID UUID,

    CONSTRAINT FK_SUBJECT_ID FOREIGN KEY (SUBJECT_ID) REFERENCES SUBJECT(ID),
    CONSTRAINT FK_CLASS_NAME FOREIGN KEY (CLASS_NAME) REFERENCES CLASS(NAME)
);

CREATE TABLE APPEARS_IN (
    PUPIL_ID UUID,
    TEST_ID UUID,
    SCORE INTEGER NOT NULL,

    CONSTRAINT FK_PUPIL_ID FOREIGN KEY (PUPIL_ID) REFERENCES PUPIL(ID),
    CONSTRAINT FK_TEST_ID FOREIGN KEY (TEST_ID) REFERENCES TEST(ID)
);

CREATE TABLE ASSIGNS (
    CLASS_NAME VARCHAR(30) NOT NULL,
    PUPIL_ID UUID,

    CONSTRAINT FK_CLASS_NAME FOREIGN KEY (CLASS_NAME) REFERENCES CLASS(NAME),
    CONSTRAINT FK_PUPIL_ID FOREIGN KEY (PUPIL_ID) REFERENCES PUPIL(ID)
);
